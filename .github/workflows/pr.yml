name: CI test

on:
  workflow_dispatch:


jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout the code
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2. Set up JDK
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository  # For Maven
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    # 6. Restore dependencies
    - name: Restore dependencies
      run: mvn clean install -DskipTests

    # 3. Build the project (create the artifact)
    - name: Build the project
      run: mvn clean package -DskipTests

    # 4. Upload artifact
    - name: Upload Lambda artifact
      uses: actions/upload-artifact@v3
      with:
        name: lambda-artifact
        path: target/*.jar  # Path to your generated JAR file (adjust if different)

    - name: Add PR Comment with SonarQube results
      uses: actions/github-script@v6
      with:
        script: |
          const qualityGateStatus = '${{ steps.sonar-quality-gate.outputs.result }}';
          const prNumber = ${{ github.event.pull_request.number }};
          const prComment = `
            CI Checks completed for PR #${prNumber}:
            - Checkstyle: ✅
            - Dependency Check: ✅
            - Build: ✅
            - Unit Tests: ✅
            - SonarQube Quality Gate: ${qualityGateStatus === 'OK' ? '✅ Passed' : '❌ Failed'}
          `;
          const { data: comment } = await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber,
            body: prComment
          });
          console.log('PR comment added:', comment.html_url);